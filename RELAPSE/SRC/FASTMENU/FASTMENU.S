*-------------------------------------------------------------------------------------------------------
* The MIT License (MIT)
*
* Copyright (c) 2015-2024 J.Hubert
*
* Permission is hereby granted, free of charge, to any person obtaining a copy of this software 
* and associated documentation files (the "Software"), 
* to deal in the Software without restriction, including without limitation the rights to use, 
* copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, 
* and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all copies 
* or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
* INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
* DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*--------------------------------------------------------------------------------------------------------

*-------------------------------------------------------------------------
*	FASTMENU											CYBERNETICS 1992
*
*	Autogenerated Blitter tested Plasma	
*-------------------------------------------------------------------------

	output	D:\PROJECTS\DEMOS\OUTPUT\RELAPSE\FASTMENU.PRX

	opt	o+

	xdef	modulebootstrap

nbligne:	set	198
nbcouleur:	set	200
interline:  set 9


modulebootstrap:
	lea		.exporttable(pc),a0
	rts

.exporttable:
		dc.l	init
		dc.l	main
exitflag:
		dc.w	0
		

init:	
		move.l		(a0),physb				* Fixe adr phy
		move.l		4(a0),font
		move.l		8(a0),fontmap
		
		movem.l		d0-d7/a1-a6,-(sp)
		lea			plasmacode(pc),a1		* Efface les bss
		move.w		#999,d0
.effbss:	
		clr.l		(a1)+
		dbra.w		d0,.effbss

		move.w		#2,$ffff8a20.w			* Inc x
		move.w		#2,$ffff8a22.w			* Inc y
		move.l		#$ffffffff,$ffff8a28.w	* masques
		move.w		#$ffff,$ffff8a2c.w		* masque
		move.w		#2,$ffff8a2e.w			* Inc x dst
		move.w		#-2,$ffff8a30.w		
		move.w		#$203,$ffff8a3a.w		* Mode demi teinte & combi log
		clr.b		$ffff8a3d.w				* No decalage
		move.w		#55,$ffff8a36.w			* Hori size
		move.l		#$ffff8240,$ffff8a32.w  * Adr dest
 		move.l		#plasma,$ffff8a24.w	 	* Table plasma (decalages)

		lea			plasmacode(pc),a2
		move.w		#nbligne-1,d0
.autogen:
		lea			tramecode(pc),a1
		rept		3
		move.l		(a1)+,(a2)+
		endr
		move.w		12(a0),d2
.g_nop:	move.w		#$4e71,(a2)+		
		dbra.w		d2,.g_nop			
		dbra.w		d0,.autogen

		move.w		#$4e75,(a2)+		
		
 		move.w	#-2,depha1				* Inits curves
		move.w	#-2,offd1
		move.w	#6,depha2
		move.w	#-10,offd2
		move.l	#couleur+20*2*2*2,ligne
		move.w	#$0,debut1
		move.w	#50,debut2	

		bsr		calcul

		bsr.s	printpanel
			
		movem.l	(sp)+,d0-d7/a1-a6
		
		rts
	

main:
		movem.l	d0-d7/a1-a6,-(sp)

		clr.b	$ffff8a3d.w
		move.l	#$4440666,$ffff8244.w	* Couleurs fixe
	
.loop:
		stop	#$2300

		bsr 	calcul					* Calcul courbe plasma


		move.l	#$2001b,d2				* nb couleur
		move.w	#$c0,d3					* bit set 
		move.l	#$ff8240,d4				* add source
		
		lea		$ffff8a32.w,a2			* Precharge registres
		lea		$ffff8a24.w,a4
		lea		$ffff8a36.w,a5
		lea		$ffff8a3c.w,a6
		lea		$ffff8209.w,a3

		move.w	#nbligne-1,d0
		lea		plasma(pc),a0

.sync:	move.b	(a3),d1			* Synchro lsl
		beq.s	.sync
		neg.w	d1
		add.w	#28,d1
		lsl.w	d1,d1

		moveq.l	#20,d1			* Nop de callage ecran
.attente:
		dbra.w	d1,.attente

		bsr		plasmacode		* Plasma
		clr.w	$ffff8240.w		* Couleur zero
		
		tst.w	exitflag
		beq.s	.loop

		movem.l	(sp)+,d0-d7/a1-a6

		rts


printpanel:
		lea		text(pc),a0				
		move.l	fontmap(pc),a2
		move.l	font(pc),a3
		move.l	physb(pc),a5

		move.w	#$fe,d3

		lea		7*160(a5),a5
		move.l	a5,a1					; a1 = physb
.loop:
		moveq.l	#0,d0
		move.b	(a0)+,d0
		beq		.end

		cmp.b	#13,d0
		bne.s	.nocr
		lea		interline*160(a5),a5
		move.l	a5,a1
		move.b	(a0)+,d0
.nocr:					
		move.l	a1,a6

		cmp.b	#'=',d0
		bne.s	.notequal

		move.b	#$FF,2*160(a6)
		move.b	#$FF,2+2*160(a6)
		move.b	#$FF,3*160(a6)
		move.b	#$FF,4*160(a6)
		move.b	#$FF,5*160(a6)
		move.b	#$FF,2+6*160(a6)
	
		bra		.next
.notequal:

		cmp.b	#'[',d0
		bne.s	.notopenbar

		move.b	#$1F,2*160(a6)
		move.b	#$1F,2+2*160(a6)
		move.b	#$1F,3*160(a6)
		move.b	#$10,2+3*160(a6)
		move.b	#$1F,4*160(a6)
		move.b	#$10,2+4*160(a6)
		move.b	#$1F,5*160(a6)
		move.b	#$10,2+5*160(a6)
		move.b	#$1F,2+6*160(a6)
	
		bra.s	.next
.notopenbar:

		cmp.b	#']',d0
		bne.s	.notclosebar

		move.b	#$F0,2*160(a6)
		move.b	#$F8,2+2*160(a6)
		move.b	#$F0,3*160(a6)
		move.b	#$08,2+3*160(a6)
		move.b	#$F0,4*160(a6)
		move.b	#$08,2+4*160(a6)
		move.b	#$F0,5*160(a6)
		move.b	#$08,2+5*160(a6)
		move.b	#$F8,2+6*160(a6)
	
		bra.s	.next
.notclosebar:
										; d0 = char ext on word
		move.b	(a2,d0.w),d0			; a2 = char map
		add.w	d0,d0
		add.w   d0,d0					; a3 = font bitmap
		lea		(a3,d0.w),a4		    ; a4 = char bitmap adr

		moveq.l	#7,d0
.looph:	move.b	(a4)+,d1
		move.b	d1,d2
		lsr.b	#1,d2
		and.w	d3,d2
		or.b	d2,d1
		move.b	d1,(a6)
		lea		160(a6),a6
		dbra	d0,.looph

.next
		move.w	a1,d0
		and.w	#1,d0
		beq.s	.even
		addq.l	#2,a1
.even:
		addq.l	#1,a1
		bra		.loop
.end
		rts

*-------------------------------------------------------------------------*
*	CALCUL COURBE PLASMA
*-------------------------------------------------------------------------*

calcul:	movem.l	d0-a6,-(sp)

		lea		plasma(pc),a0	* tableau de destination
		lea		tableau(pc),a1	* tableau de sinus*512
		move.l	ligne(pc),a2	* ligne de depart
		move.w	debut1(pc),d1	* angle de depart du 1er sinus 
		move.w	debut2(pc),d2	* angle de depart du 2em sinus
		move.w	depha1(pc),a3	* dephasage du premier sinus
		move.w	depha2(pc),a4
		move.w	#1023,d0
		moveq.l	#0,d5			* compensation precedente
		moveq.l	#1,d7			* compensation precedente

plasmouge:	macro
		move.w	(a1,d1.w),d3	* premier dephasage
		add.w	(a1,d2.w),d3	* 2em dephasage				
		
		move.w	d3,d4
		and.w	d7,d4			* decalage?
		sub.w	d4,d3			* offset couleur
		add.w	d3,d3			* mod 4
		add.w	d4,d4			* decalage*2
		
		sub.w	d4,d5
		addq.w	#2,d5
		move.w	d5,(a0)+		* offset decalage
		
		lea	(a2,d3.w),a5
		move.l	a5,(a0)+		* couleur depart sans dephasage
	
		add.w	a3,d1			* offset de dephasage 1
		and.w	d0,d1
		add.w	a4,d2			* offset de dephasage 2
		and.w	d0,d2


		move.w	(a1,d1.w),d3		* premier dephasage
		add.w	(a1,d2.w),d3		* 2em dephasage				
		
		move.w	d3,d5
		and.w	d7,d5			* decalage?
		sub.w	d5,d3			* offset couleur
		add.w	d3,d3
		add.w	d5,d5			* decalage*2
		
		sub.w	d5,d4
		addq.w	#2,d4
		move.w	d4,(a0)+		* offset decalage
		
*-------------------*
*tester en faisant d0+d3*
*--------------------*	
		lea	(a2,d3.w),a5
		move.l	a5,(a0)+		* couleur depart sans dephasage
	
		add.w	a3,d1			* offset de dephasage 1
		and.w	d0,d1
		add.w	a4,d2			* offset de dephasage 2
		and.w	d0,d2
		endm		
					
		move.w	#nbligne/2-1,d6
boucle:	plasmouge
		dbra.w	d6,boucle
		
		move.w	offd1(pc),d6
		add.w	d6,debut1
		and.w	d0,debut1
	
		move.w	offd2(pc),d6
		add.w	d6,debut2		
		and.w	d0,debut2
		
		movem.l	(sp)+,d0-a6 
	
		rts

tramecode:
		move.w	(a0)+,d1
		lsl.w	d1,d1
		move.l	(a0)+,(a4)
		move.l	d4,(a2)
		move.l	d2,(a5)
		move.b	d3,(a6)

*-------------------------------------------------------------------------*
		Section 	data

font:		dc.l	0
fontmap:	dc.l	0
ligne:		ds.l	1
debut1:		ds.w	2
debut2:		ds.w	2
depha1:		ds.w	2
depha2:		ds.w	2
offligne:	ds.l	3
offd1:		ds.w	2
offd2:		ds.w	2
physb:		dc.l	0

couleur:	rept	15
			dc.w	$abc,$503,$345,$402,$3c5,$503,$b5d,$604
			dc.w	$b5d,$503,$3c5,$402,$345,$503,$abc,$604
			endr

tableau:	incbin		plasinus.kra

text:
;				 01234567890123456789012345678901234567890123456789012345678901234567890123456789
													   
		dc.b	'[======] RELAPSE HD [===========================] CYBERNETICS 1992-2024 [======]',13
		dc.b	' ',13
		dc.b	'[==============================================================================]',13
		dc.b	' SCREENS [=============================] WITH ALTERNATIVE MUSIKS [=============]',13
		dc.b	'[==============================================================================]',13
		dc.b    ' F1. INTRODUCTION [============================================================]',13
		dc.b    ' F2. LIQUID OSMOSIS [==========================================================]',13
		dc.b    ' F3. EGYPTIA [=================================================================]',13
		dc.b    ' F4. GRAPHIKSOUND II [=================] 4.. NEUROBEAT by SINIS [==============]',13
		dc.b    ' F5. INTERLUDE [===============================================================]',13
		dc.b    ' F6. CASCADE [=========================] 6.. SHADOW CASCADE by SINIS [=========]',13
		dc.b    ' F7. SHADED VISION OF ART [====================================================]',13
		dc.b    ' F8. SPACE FILLER [============================================================]',13
		dc.b    ' F9. BOBS MIGRATION OVER ZOOMLAND [============================================]',13
		dc.b    ' F10 INFO SCREEN [=====================] 0.. EAGAN by BIP and SINIS [==========]',13
		dc.b	' RET FLOW MODE [=======================] TAB FLOW MODE with ALT MUSIKS [=======]',13
		dc.b	'[==============================================================================]',13
		dc.b	' ',13
		dc.b	'[==============================================================================]',13
		dc.b	' NUMPAD -+ /*  BASS-TREBLE (anywhere) [========================================]',13
		dc.b	'[==============================================================================]',0
		
		even

		Section		bss

plasma:		ds.w		(nbligne+1)*3+3
plasmacode:	ds.b		(nbligne+2)*(12+4*2)
