; ----------------------------------------------------------------------------
; SYNTH YM SOUND PROTOTYPE
;
; For an azerty keyboard (PC) :
;
; - 13 keys TAB then octave A to $ (line 0 & 1) => play note
; - F1 to F10 									=> change octave transpose
; - LEFT / RIGHT 								=> +/- semi tone transpose
; - 4 / 6 (numpad)								=> fine tune 
; - + / - (numpad)								=> select sound
; - 7 / 9 (numpad)                              => inc / dec portamiento (operate when != 0, value is number of vbls to slide)
; - UP / DOWN									=> select channel
; - SPACE                   					=> activate / deactivate channel
; - BACKSPACE									=> PC only : toggle YM PC emulator curve sync
; - RETURN                                      => PC only : hot reloads the sound script
; - ²                                           => PC only : change sound emulator (default is the most accurate)
; ----------------------------------------------------------------------------

; ----------------------------------------------------------------------------
;  Curve type, can be :
;  - AMP  	   : 0->15 ch levelor 16 for enveloppe mode
;  - FREQ 	   : -64 -> 64 semi tones
;  - MIX  	   : 0 -> 3 (max level, square, noise, square + noise)
;  - ENVFREQ   : -64 -> 64 semi tones
;  - ENVSHAPE  : 0 -> 15. YM env shape. Repeating ones are (8 and 10 for sawtooth, 12 and 14 for triangle)
;  - NOISEFREQ : 0 -> 31
;
;  Then curve can be specified :
;
;  - as ascii art level :
;	 A attack S sustain R release
;    number of letter determine level (1 char for 1)
;    xx or |xx are positive values
;    xx| is negative value 
;
;  - as value :
;    a attack s sustain r release
;    xvalue
;    for examples : s10 or s-5
;
;  curve ends with character < 
;
;  AMP curve has a specificity : it determines the life cycle of the sound
;  so the AMP curve will go to release if exists (or stop) when the key is not pressed anymore
;  for other types of curves, if there is no release but a sustain phasis 
;  it will loops on the sustain till the sound reaches the end (based on AMP curve life cycle)
; ----------------------------------------------------------------------------

[SIMPLESQR]
    AMP
    1
    s10
    <

    FREQ
    1
    a0
    <

    MIX
    1
    a1
    <

    END

[SQUARE_VIB]
    AMP
	1
    SSSSSSSSSS
    RRRRRRRRRR
    RRRRRRRRR
    RRRRRRRR
    RRRRRRR
    RRRRRR
    RRRRR
    RRRR
    RRR
    RR
    R
    <

    FREQ
    1
    a0
    <

    FREQFINE
    1
    s0
    s-2
    s-4
    s-2
    s0
    s2
    s4
    s2
    <

    MIX
    1
    a1
    <

    END

[SQUARE_SYNC]
    SQRSYNC
    1
    a1
    s0
    s0
    s1
    <

    AMP
    4
    AAAA
    SSSSSSSSSS
    RRRRRRRRRR
    RRRRRRRRR
    RRRRRRRR
    RRRRRRR
    RRRRRR
    RRRRR
    RRRR
    RRR
    RR
    R
    <

    FREQ
    1
    a0
    <

    FREQFINE
    2
    s0
    s-2
    s-4
    s-2
    s0
    s2
    s4
    s2
    <

    MIX
    1
    a1
    <

    END
	[SQUARE_PUMP_0]
    AMP
    1
	AA
    AAAA
	AAAAAA
	AAAAAAAA
	AAAAAAAAAA
    SSSSSSSSSS
    <

    FREQ
    1
    a0
    <

    FREQFINE
    1
    s0
    s-2
    s-4
    s-2
    s0
    s2
    s4
    s2
    <

    MIX
    1
    a1
    <

    END
[SQUARE_PUMP_1]
    AMP
    1
	A
	AA
	AAA
    AAAA
	AAAAA
	AAAAAA
	AAAAAAA
	AAAAAAAA
	AAAAAAAAA
	AAAAAAAAAA
    SSSSSSSSSS
    <

    FREQ
    1
    a0
    <

    FREQFINE
    1
    s0
    s-2
    s-4
    s-2
    s0
    s2
    s4
    s2
    <

    MIX
    1
    a1
    <

    END
[SQUARE_PUMP_2]
    AMP
    2
	A
	AA
	AAA
    AAAA
	AAAAA
	AAAAAA
	AAAAAAA
	AAAAAAAA
	AAAAAAAAA
	AAAAAAAAAA
    SSSSSSSSSS
    <

    FREQ
    1
    a0
    <

    FREQFINE
    1
    s0
    s-2
    s-4
    s-2
    s0
    s2
    s4
    s2
    <

    MIX
    1
    a1
    <

    END
[SQUARE_PUMP_3]
    AMP
    3
	A
	AA
	AAA
    AAAA
	AAAAA
	AAAAAA
	AAAAAAA
	AAAAAAAA
	AAAAAAAAA
	AAAAAAAAAA
    SSSSSSSSSS
    <

    FREQ
    1
    a0
    <

    FREQFINE
    1
    s0
    s-2
    s-4
    s-2
    s0
    s2
    s4
    s2
    <

    MIX
    1
    a1
    <

    END
[SQUARE_PUMP_4]
    AMP
    4
	A
	AA
	AAA
    AAAA
	AAAAA
	AAAAAA
	AAAAAAA
	AAAAAAAA
	AAAAAAAAA
	AAAAAAAAAA
    SSSSSSSSSS
    <

    FREQ
    1
    a0
    <

    FREQFINE
    1
    s0
    s-2
    s-4
    s-2
    s0
    s2
    s4
    s2
    <

    MIX
    1
    a1
    <

    END
[CH_1]
    AMP
    3
    SSSSSSSSSS
    <

    FREQ
    1
    s0
    s7
    <

    MIX
    1
    a1
    <
	
	END
[CH_2]
    AMP
    3
    SSSSSSSSSS
    <

    FREQ
    1
    s0
	s5
    <

    MIX
    1
    a1
    <
	
	END
[CH_3]
    AMP
    3
    SSSSSSSSSS
    RRRRRRRRRR
    RRRRRRRRR
    RRRRRRRR
    RRRRRRR
    RRRRRR
    RRRRR
    RRRR
    RRR
    RR
    R
    <
    
    FREQ
    1
    s5
	s8
	s13
    <
    
    MIX
    1
    a1
    <
    
    END
[CH_4]
    AMP
    3
    SSSSSSSSSS
    RRRRRRRRRR
    RRRRRRRRR
    RRRRRRRR
    RRRRRRR
    RRRRRR
    RRRRR
    RRRR
    RRR
    RR
    R
    <
    
    FREQ
    1
    s13
	s6
	s10
    <
    
    MIX
    1
    a1
    <
    
    END
[CH_1_SL]
    AMP
    3
    SSSSSSSSSS
    RRRRRRRRRR
    RRRRRRRRR
    RRRRRRRR
    RRRRRRR
    RRRRRR
    RRRRR
    RRRR
    RRR
    RR
    R
    <

    FREQ
    2
    s1
    s5
    s10
    <

    MIX
    1
    a1
    <
	
	END
[CH_2_SL]
    AMP
    3
    SSSSSSSSSS
    RRRRRRRRRR
    RRRRRRRRR
    RRRRRRRR
    RRRRRRR
    RRRRRR
    RRRRR
    RRRR
    RRR
    RR
    R
    <

    FREQ
    2
    s3
	s8
	s12
    <

    MIX
    1
    a1
    <
	
	END
[CH_3_SL]
    AMP
    3
    SSSSSSSSSS
    RRRRRRRRRR
    RRRRRRRRR
    RRRRRRRR
    RRRRRRR
    RRRRRR
    RRRRR
    RRRR
    RRR
    RR
    R
    <
    
    FREQ
    2
    s5
	s8
	s13
    <
    
    MIX
    1
    a1
    <
    
    END
[CH_4_SL]
    AMP
    3
    SSSSSSSSSS
    RRRRRRRRRR
    RRRRRRRRR
    RRRRRRRR
    RRRRRRR
    RRRRRR
    RRRRR
    RRRR
    RRR
    RR
    R
    <
    
    FREQ
    2
    s13
	s6
	s10
    <
    
    MIX
    1
    a1
    <
    
    END
[NOISE_SWEEP]
; ----------------------------------------------------------------------------
    AMP
    1
	s10
    <

	NOISEFREQ
	10
	s0
	s1
	s2
	s3
	s4
	s5
	s6
	s7
	s8
	s9
	s10
	s11
	s12
	s13
	s14
	s15
	s16
	s17
	s18
	s19
	s20
	s21
	s22
	s23
	s24
	s25
	s26
	s27
	s28
	s29
	s30
	s31
	s30
	s29
	s28
	s27
	s26
	s25
	s24
	s23
	s22
	s21
	s20
	s19
	s18
	s17
	s16
	s15
	s14
	s13
	s12
	s11
	s10
	s9
	s8
	s7
	s6
	s5
	s4
	s3
	s2
	s1
	s0
	<

    MIX
    1
	s2
    <
	
	END
[NOISE_CRASH]
; ----------------------------------------------------------------------------
    AMP
    4
    s10
	r9
	r8
	r7
	r6
	r5
	r4
	r3
	r2
	r1
	r0
    <

    ENVFREQ
    1
    s0
    <


    NOISEFREQ
    1
	r0
	r1
	r2
	r3
	r4
	r5
	r6
	r7
	r8
	r9
	r10
	r11
	r12
	r13
	r14
	r15
	r16
	r17
	r18
	r19
	r20
	r21
	r22
	r23
	r24
	r25
	r26
	r27
	r28
	r29
	r30
	r31
    <

    MIX
    1
    a2
    <

	END
	
[NOISE_PURE]

	MIX
    1
    a2
    <
	
    NOISEFREQ
    1
    s1
	<
    
	AMP
    1
    s10
    <
	
	END
[NOISE_REVSWEEP]
; ----------------------------------------------------------------------------
    AMP
    1
	s10
    <

	NOISEFREQ
	10
	s31
	s30
	s29
	s28
	s27
	s26
	s25
	s24
	s23
	s22
	s21
	s20
	s19
	s18
	s17
	s16
	s15
	s14
	s13
	s12
	s11
	s10
	s9
	s8
	s7
	s6
	s5
	s4
	s3
	s2
	s1
	s0
	s1
	s2
	s3
	s4
	s5
	s6
	s7
	s8
	s9
	s10
	s11
	s12
	s13
	s14
	s15
	s16
	s17
	s18
	s19
	s20
	s21
	s22
	s23
	s24
	s25
	s26
	s27
	s28
	s29
	s30
	<

    MIX
    1
	s2
    <
	
	END
	[NOISE_SWEEP2]
; ----------------------------------------------------------------------------
    AMP
    1
	s10
    <

	NOISEFREQ
	20
	s0
	s1
	s2
	s3
	s4
	s5
	s6
	s7
	s8
	s9
	s10
	s11
	s12
	s13
	s14
	s15
	s16
	s17
	s18
	s19
	s20
	s21
	s22
	s23
	s24
	s25
	s26
	s27
	s28
	s29
	s30
	s31
	s30
	s29
	s28
	s27
	s26
	s25
	s24
	s23
	s22
	s21
	s20
	s19
	s18
	s17
	s16
	s15
	s14
	s13
	s12
	s11
	s10
	s9
	s8
	s7
	s6
	s5
	s4
	s3
	s2
	s1
	s0
	<

    MIX
    1
	s2
    <
	
	END